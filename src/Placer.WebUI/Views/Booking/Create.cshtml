@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@model Placer.WebUI.ViewModels.Bookings.CreateBookingViewModel

@inject IViewLocalizer localizer

@{
    Layout = "_Layout";
}
@{
    string dollarSymbol = CultureInfo.GetCultureInfo("en-US").NumberFormat.CurrencySymbol;
}

<!DOCTYPE html>

<html>
<head>
  <meta charset="utf-8" />
</head>
<body>
    <div class="wrapper">
        <div class="checkout container">
             <form id="payment-form" method="post" asp-controller="Booking" asp-action="Create">
             <div class="card mb-3">
                 <div class="row g-0">
                     <div class="col-md-6">
                         <div class="card-body">
                             <input type="hidden" name="TourId" value="@Model.TourId"/>
                             <input type="hidden" name="BookerId" value="@Model.BookerId"/>
                             <input type="hidden" name="BookingPrice" value="@Model.BookingPrice"/>
                             <input type="hidden" name="BookingLimitDays" value="@Model.BookingLimitDays"/>
                             <input type="hidden" name="TourPrice" value="@Model.TourPrice"/>

                             <div class="mb-3">
                                 <label class="form-label">@localizer["You can book only for"]:</label>
                                 <span>@Model.BookingLimitDays @localizer["days"]</span>
                             </div>

                             <div class="mb-3">
                                 <label for="inputQuantity" class="form-label">@localizer["Choose Booking Duration(days)"]:</label>
                                 <input class="form-control text-center" id="inputQuantity" name="BookingDuration" type="number" value="1" style="max-width: 4rem" max="@Model.BookingLimitDays" min="1"/>
                             </div>

                             <div class="mb-3">
                                 <label class="form-label">@localizer["Price per 1 day of booking"]:</label>
                                 <span>@Model.BookingPrice</span>@dollarSymbol
                             </div>
                         </div>
                     </div>
                     <div class="col-md-6">
                         <section>
                             <div class="bt-drop-in-wrapper">
                                 <div id="bt-dropin"></div>
                             </div>
                         </section>
                         @Html.HiddenFor(n => n.Nonce, new { @id = "nonce" })
                         <hr/>
                         <div class="d-flex justify-content-between">
                             <a asp-controller="Tour" asp-action="Index" class="btn btn-outline-secondary">@localizer["Cancel"]</a>
                             <button class="btn btn-success" type="submit"><span>@localizer["Confirm Payment"]</span></button>
                             <button id="google-pay-button" style="display: none;"></button>
                             </div>
                     </div>  
                 </div>
             </div>
             </form>
        </div>
    </div>
<script src="https://js.braintreegateway.com/web/dropin/1.22.0/js/dropin.min.js"></script>
<script src="https://pay.google.com/gp/p/js/pay.js"></script>
<script src="https://js.braintreegateway.com/web/3.100.0/js/client.min.js"></script>
<script src="https://js.braintreegateway.com/web/3.100.0/js/google-payment.min.js"></script>
<script>
   var client_token = "@ViewBag.ClientToken";
   var form = document.querySelector('#payment-form');
    
   var paymentsClient = new google.payments.api.PaymentsClient({
     environment: 'TEST'
   });
   braintree.dropin.create({
       authorization: client_token,
       container: '#bt-dropin',
       googlePay: {
           googlePayVersion: 2,
           transactionInfo: {
             totalPriceStatus: 'FINAL',
             totalPrice: '1',
             currencyCode: 'USD'
           },
           allowedPaymentMethods: [{
             type: 'CARD',
           }]
       }
     }, function (createErr, instance) {
         form.addEventListener('submit', function (event) {
             event.preventDefault();
 
             instance.requestPaymentMethod(function (err, payload) {
                 if (err) {
                     return;
                 }
               
                 document.querySelector('#nonce').value = payload.nonce;
                 form.submit();
             });
         });
     });
</script>
</body>
</html>